# Project paths
#
# Why the abstraction using templates?
# So that when you change directories or the
# name of a folder, you will (usually) only
# need to update a single value in this file,
# and the templates do the rest of the work for you.
#
# ========================================
# <%= _.keys() %>
org: https://github.com/assemble
main: <%= assemble.org %>/assemble
docs: <%= assemble.main %>/wiki
examples: <%= assemble.org %>/assemble/tree/master/examples


# Getting Started
# ========================================

## Configuration
config: <%= assemble.wiki %>/Configuration
gruntfile: <%= assemble.wiki %>/Gruntfile
tasks: <%= assemble.wiki %>/Task-and-Targets
options: <%= assemble.wiki %>/Options

## Templates
templates: <%= assemble.wiki %>/Templates
layouts: <%= assemble.wiki %>/Layouts
pages: <%= assemble.wiki %>/Pages
partials: <%= assemble.wiki %>/Partials
helpers: <%= assemble.wiki %>/Helpers
collections: <%= assemble.wiki %>/Collections
assets: <%= assemble.wiki %>/Assets

## Data and Content
content: <%= assemble.wiki %>/Content
data: <%= assemble.wiki %>/Data
markdown: <%= assemble.wiki %>/Markdown

## Examples
exampleSite: <%= assemble.wiki %>/Creating-a-New-Site

exampleSimple: <%= assemble.examples %>/simple
exampleGrid: <%= assemble.examples %>/advanced
exampleTable: <%= assemble.examples %>/advanced
exampleForm: <%= assemble.examples %>/advanced

## Contributing
contribute: <%= assemble.wiki %>/Contributing-to-Assemble
extend: <%= assemble.wiki %>/Extending-Assemble


# Related Projects
# ========================================

## Template helper library
helpers: <%= assemble.org %>/helper-lib




# External
# ========================================

## Grunt
grunt:
  website: http://gruntjs.com/
  upgrading: http://gruntjs.com/upgrading-from-0.3-to-0.4
  gettingStarted: http://gruntjs.com/getting-started

## package.json
package: https://npmjs.org/doc/json.html